/**
 * RetweetTag automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */


using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using RestSharp;
using Sdkgen.Client;
using Sdkgen.Client.Exception;

namespace SdkFabric.Twitter;

public class RetweetTag : TagAbstract {
    public RetweetTag(RestClient httpClient, Parser parser): base(httpClient, parser)
    {
    }


    /**
     * Returns the Retweets for a given Tweet ID.
     */
    public async Task<TweetCollection> GetAll(string tweetId, string expansions, int maxResults, Fields fields)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("tweet_id", tweetId);

        Dictionary<string, object> queryParams = new();
        queryParams.Add("expansions", expansions);
        queryParams.Add("max_results", maxResults);
        queryParams.Add("fields", fields);

        List<string> queryStructNames = new();
        queryStructNames.Add("fields");

        RestRequest request = new(this.Parser.Url("/2/tweets/:tweet_id/retweets", pathParams), Method.Get);
        this.Parser.Query(request, queryParams, queryStructNames);


        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            var data = this.Parser.Parse<TweetCollection>(response.Content);

            return data;
        }

        var statusCode = (int) response.StatusCode;
        throw new UnknownStatusCodeException("The server returned an unknown status code: " + statusCode);
    }


}
